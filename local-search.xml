<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/09/25/matlab%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <url>/2021/09/25/matlab%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="Matlab-学习的第一天"><a href="#Matlab-学习的第一天" class="headerlink" title="Matlab 学习的第一天"></a>Matlab 学习的第一天</h1><h2 id="一切的开始"><a href="#一切的开始" class="headerlink" title="一切的开始"></a>一切的开始</h2><p>这个学期有一门数值分析课程，课程名是“数值分析与编程”，往年在暑期会有一系列熟悉matlab的过程。但是今年老师认为我们都有一定的C语言基础，于是没有让我们进行，反而在开学第一节可就布置了两个编程作业。而我并没有学习过C语言，于是只能从头开始，在下节课之前，要一周之内掌握一定的Matlab技巧。</p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ol><li>编写程序，使用<br>$e=\lim_{n \to +\infty}(1+\frac{1}{n})^n$<br>计算常数e。具体地，对$n=10^k (k=1,2,3,…,20)$,计算$(1+\frac{1}{n})^n$.将结果与exp(1)比较，确定近似值的误差，判断误差是否随n的增加而降低。用matlab画出误差的变化趋势曲线</li><li>实现埃拉托色尼筛选法</li></ol><p><em>埃拉托色尼筛选法:列出有需要寻找质数的范围内的所有整数，除去1，然后用数字依次除后面的数，除掉可以整除的数字；然后剩下的第二个数去除后面的数，删掉可以整除的数；依次进行，直到最后一个数字</em> </p><h2 id="作业之前自己摸索"><a href="#作业之前自己摸索" class="headerlink" title="作业之前自己摸索"></a>作业之前自己摸索</h2><ol><li>Matlab中使用‘=’定义变量的值，如果需要同时定义多个变量的值，使用”,”隔开。事实上，使用”;”隔开也可以，只是“；”同时有不显示计算结果的作用，可以定义，但是不显示出来</li><li>可以使用的运算符号“+” “-” “*” “/(除以，就是÷)” “\（除，就是除以相反）”  “ ^（乘方，幂运算）” ，这些是对数字使用的，对数组还有其他，暂时不进行考虑。</li><li>遇到了问题，在计算e时，需要计算“1+1/10^20”，这时，因为matlab中默认使用双精度浮点数64位（还可改为单精度32位，更差），导致误差的出现，具体就是1+1/10^20的输出结果是1。<a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/floating-point-numbers.html?lang=en">官方文件</a>中最后有提到相关内容。<h2 id="作业1实现"><a href="#作业1实现" class="headerlink" title="作业1实现"></a>作业1实现</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">for</span> n=<span class="hljs-number">1</span>:<span class="hljs-number">20</span><br>    k(n)=<span class="hljs-number">10</span>^n<br>    x(n)=(<span class="hljs-number">1</span>+<span class="hljs-number">1</span>/k(n))^k(n)<br><span class="hljs-keyword">end</span><br>n=<span class="hljs-number">1</span>:<span class="hljs-number">20</span><br>y=<span class="hljs-built_in">exp</span>(<span class="hljs-number">1</span>)-x<br><span class="hljs-built_in">plot</span>(n,y)<br></code></pre></td></tr></table></figure>在n为从1到8的过程中，误差是逐渐缩小的，但是当n大于8以后，误差又开始逐渐变大，尤其是到了最后，从n=16开始，计算出的e是1，这明显是浮点数计算过程中出现的截断误差的问题，具体的误差处理方法：不知道。</li></ol><h2 id="作业2前置学习"><a href="#作业2前置学习" class="headerlink" title="作业2前置学习"></a>作业2前置学习</h2><ol><li><p>数组/矩阵中元素的删除</p><p> 对矩阵，A(k1:k2, : )=[] 表示删除第k1到k2行<br> 同理A( ： ，k1:k2)=[] 表述删除列。当然，可以不用：，仅仅A(k, :)=[]。注意，冒号是必须的，否则就是语法错误。</p><p> 对数组，n(1;2)=[ ]表示删除第1和第2个数字，n(4)=[ ]表示删除第4个数字</p></li><li><p>判断数字能否被整除</p><p> 使用rem命令，rem（m,n）:m除以n，输出余数。</p></li><li><p>判断数组中元素个数</p><p> 使用numel命令，如nummel(A)表示A矩阵中的元素个数，numel(a)表示向量a中元素的个数。</p><h2 id="作业2实现以及校验"><a href="#作业2实现以及校验" class="headerlink" title="作业2实现以及校验"></a>作业2实现以及校验</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs matlab">n=<span class="hljs-number">1</span>:<span class="hljs-number">1000</span><br>n(<span class="hljs-number">1</span>)=[]<br><span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>,<span class="hljs-built_in">j</span>=<span class="hljs-number">2</span><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">i</span>&lt;= <span class="hljs-built_in">numel</span>(n)<br>    <span class="hljs-built_in">j</span>=<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">j</span>&lt;=<span class="hljs-built_in">numel</span> (n)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">rem</span>(n(<span class="hljs-built_in">j</span>),n(<span class="hljs-built_in">i</span>))==<span class="hljs-number">0</span>;<br>            n(<span class="hljs-built_in">j</span>)=[];<br>        <span class="hljs-keyword">else</span> n=n;<br>        <span class="hljs-keyword">end</span><br>        <span class="hljs-built_in">j</span>=<span class="hljs-built_in">j</span>+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">i</span>=<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span><br>n;<br>a=[<span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">11</span> <span class="hljs-number">13</span> <span class="hljs-number">17</span> <span class="hljs-number">19</span> <span class="hljs-number">23</span> <span class="hljs-number">29</span> <span class="hljs-number">31</span> <span class="hljs-number">37</span> <span class="hljs-number">41</span> <span class="hljs-number">43</span> <span class="hljs-number">47</span> <span class="hljs-number">53</span> <span class="hljs-number">59</span> <span class="hljs-number">61</span> <span class="hljs-number">67</span> <span class="hljs-number">71</span> <span class="hljs-number">73</span> <span class="hljs-number">79</span> <span class="hljs-number">83</span> <span class="hljs-number">89</span> <span class="hljs-number">97</span> <span class="hljs-number">101</span> <span class="hljs-number">103</span> <span class="hljs-number">107</span> <span class="hljs-number">109</span> <span class="hljs-number">113</span> <span class="hljs-number">127</span> <span class="hljs-number">131</span> <span class="hljs-number">137</span> <span class="hljs-number">139</span> <span class="hljs-number">149</span> <span class="hljs-number">151</span> <span class="hljs-number">157</span> <span class="hljs-number">163</span> <span class="hljs-number">167</span> <span class="hljs-number">173</span> <span class="hljs-number">179</span> <span class="hljs-number">181</span> <span class="hljs-number">191</span> <span class="hljs-number">193</span> <span class="hljs-number">197</span> <span class="hljs-number">199</span> <span class="hljs-number">211</span> <span class="hljs-number">223</span> <span class="hljs-number">227</span> <span class="hljs-number">229</span> <span class="hljs-number">233</span> <span class="hljs-number">239</span> <span class="hljs-number">241</span> <span class="hljs-number">251</span> <span class="hljs-number">257</span> <span class="hljs-number">263</span> <span class="hljs-number">269</span> <span class="hljs-number">271</span> <span class="hljs-number">277</span> <span class="hljs-number">281</span> <span class="hljs-number">283</span> <span class="hljs-number">293</span> <span class="hljs-number">307</span> <span class="hljs-number">311</span> <span class="hljs-number">313</span> <span class="hljs-number">317</span> <span class="hljs-number">331</span> <span class="hljs-number">337</span> <span class="hljs-number">347</span> <span class="hljs-number">349</span> <span class="hljs-number">353</span> <span class="hljs-number">359</span> <span class="hljs-number">367</span> <span class="hljs-number">373</span> <span class="hljs-number">379</span> <span class="hljs-number">383</span> <span class="hljs-number">389</span> <span class="hljs-number">397</span> <span class="hljs-number">401</span> <span class="hljs-number">409</span> <span class="hljs-number">419</span> <span class="hljs-number">421</span> <span class="hljs-number">431</span> <span class="hljs-number">433</span> <span class="hljs-number">439</span> <span class="hljs-number">443</span> <span class="hljs-number">449</span> <span class="hljs-number">457</span> <span class="hljs-number">461</span> <span class="hljs-number">463</span> <span class="hljs-number">467</span> <span class="hljs-number">479</span> <span class="hljs-number">487</span> <span class="hljs-number">491</span> <span class="hljs-number">499</span> <span class="hljs-number">503</span> <span class="hljs-number">509</span> <span class="hljs-number">521</span> <span class="hljs-number">523</span> <span class="hljs-number">541</span> <span class="hljs-number">547</span> <span class="hljs-number">557</span> <span class="hljs-number">563</span> <span class="hljs-number">569</span> <span class="hljs-number">571</span> <span class="hljs-number">577</span> <span class="hljs-number">587</span> <span class="hljs-number">593</span> <span class="hljs-number">599</span> <span class="hljs-number">601</span> <span class="hljs-number">607</span> <span class="hljs-number">613</span> <span class="hljs-number">617</span> <span class="hljs-number">619</span> <span class="hljs-number">631</span> <span class="hljs-number">641</span> <span class="hljs-number">643</span> <span class="hljs-number">647</span> <span class="hljs-number">653</span> <span class="hljs-number">659</span> <span class="hljs-number">661</span> <span class="hljs-number">673</span> <span class="hljs-number">677</span> <span class="hljs-number">683</span> <span class="hljs-number">691</span> <span class="hljs-number">701</span> <span class="hljs-number">709</span> <span class="hljs-number">719</span> <span class="hljs-number">727</span> <span class="hljs-number">733</span> <span class="hljs-number">739</span> <span class="hljs-number">743</span> <span class="hljs-number">751</span> <span class="hljs-number">757</span> <span class="hljs-number">761</span> <span class="hljs-number">769</span> <span class="hljs-number">773</span> <span class="hljs-number">787</span> <span class="hljs-number">797</span> <span class="hljs-number">809</span> <span class="hljs-number">811</span> <span class="hljs-number">821</span> <span class="hljs-number">823</span> <span class="hljs-number">827</span> <span class="hljs-number">829</span> <span class="hljs-number">839</span> <span class="hljs-number">853</span> <span class="hljs-number">857</span> <span class="hljs-number">859</span> <span class="hljs-number">863</span> <span class="hljs-number">877</span> <span class="hljs-number">881</span> <span class="hljs-number">883</span> <span class="hljs-number">887</span> <span class="hljs-number">907</span> <span class="hljs-number">911</span> <span class="hljs-number">919</span> <span class="hljs-number">929</span> <span class="hljs-number">937</span> <span class="hljs-number">941</span> <span class="hljs-number">947</span> <span class="hljs-number">953</span> <span class="hljs-number">967</span> <span class="hljs-number">971</span> <span class="hljs-number">977</span> <span class="hljs-number">983</span> <span class="hljs-number">991</span> <span class="hljs-number">997</span>];<br>n==a<br>n<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/09/25/markdown%E4%B8%AD%E5%85%AC%E5%BC%8F/"/>
    <url>/2021/09/25/markdown%E4%B8%AD%E5%85%AC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="编辑器配置"><a href="#编辑器配置" class="headerlink" title="编辑器配置"></a>编辑器配置</h2><h3 id="配置原因"><a href="#配置原因" class="headerlink" title="配置原因"></a>配置原因</h3><p>使用的编辑器是MarkdownPad 2，因为本身自己就是个菜鸟，刚刚接触编号曾，使用可以实时预览的编辑器可以减少犯错。<br>但是问题是markdownpad 2不能实时预览公式，需要额外配置，这里记录下配置过程</p><h3 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h3><p><a href="https://blog.csdn.net/qq_34243930/article/details/89158353">参考教程</a></p><p><a href="https://blog.csdn.net/qq_23091073/article/details/79888859">参考教程2</a></p><p>在“工具-选项-高级-HTMLhead编辑”中，加入参考教程中提供的代码即可。但是注意的是当使用离线模式的时候，需要下载2.7.1版本的 mathjax 而不是最新版，因为文件结构有所改动。</p><h2 id="公式的书写"><a href="#公式的书写" class="headerlink" title="公式的书写"></a>公式的书写</h2><p>MarkDown的公式支持lex格式，具体的书写就是在或者是中间加入lex代码的公式，下面第一种写法表示行内公式，即插入在一对或两对$之间（本软件不识别行内公式）。其中一对代表行内公式，即本行内直接显示。两对代表公式单独一行。<br><strong>在书写行内公式时前面的$ 后面不能加空格，否则不会认为是公式</strong><br>$E=mc^2$</p><p>$$ \Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,. $$</p><h2 id="本文目的"><a href="#本文目的" class="headerlink" title="本文目的"></a>本文目的</h2><p>本文是在书写另一篇md文件时需要插入公式，结果不会用另开的一篇。因此本文暂时的目的即写出需要的公式，后续如有进一步学习再加补充。<br>$$e=\lim_{n \to +\infty}(1+\frac{1}{n})^n$$</p><h2 id="进一步的配置"><a href="#进一步的配置" class="headerlink" title="进一步的配置"></a>进一步的配置</h2><p>放弃MarkDownPad 2，使用visual studio code。之前的配置不需要了。不过Visual Studio Code 对于格式的要求严格一些，就像标题的井号后面必须有空格才能识别。同时，不能直接插入一些符号，对新手还是难啊。现在想来，应该同时使用两者，然后取两者的优势互补。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/25/hello-world/"/>
    <url>/2021/07/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
